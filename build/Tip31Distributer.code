.version sol 0.63.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../contracts/Tip31Distributer.sol, 31
GETGLOB 9
GETGLOB 17
SDEQ
THROWIFNOT 1001
.loc ../contracts/Tip31Distributer.sol, 32
PUSHREF {
	.blob x546865206e756d626572206f6620090909726563697069656e7473206572726f7221
}
PUSH S4
FIRST
GTINT 0
PUSH S5
FIRST
LESSINT 101
AND
THROWARGIFNOT 1002
.loc ../contracts/Tip31Distributer.sol, 33
PUSHREF {
	.blob x546865206e756d626572206f6620726563697069656e7473206d75737420090909657175616c20746f20746865206e756d626572206f6620616d6f756e747321
}
PUSH S4
FIRST
PUSH S4
FIRST
EQUAL
THROWARGIFNOT 1003
.loc ../contracts/Tip31Distributer.sol, 34
ACCEPT
.loc ../contracts/Tip31Distributer.sol, 35
ROLL 4
SETGLOB 12
.loc ../contracts/Tip31Distributer.sol, 36
DUP
CALLREF {
	CALL $setOwnership_a7016023_internal_macro$
}
.loc ../contracts/Tip31Distributer.sol, 37
SETGLOB 14
.loc ../contracts/Tip31Distributer.sol, 38
DROP
SWAP
SETGLOB 15
.loc ../contracts/Tip31Distributer.sol, 39
SETGLOB 16
.loc ../contracts/Tip31Distributer.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensTransfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Tip31Distributer.sol, 43
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/Tip31Distributer.sol, 0
CALLREF {
	CALL $onAcceptTokensTransfer_e63f2284_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensTransfer_e63f2284_internal_macro
.loc ../contracts/Tip31Distributer.sol, 45
BLKDROP 4
ACCEPT
.loc ../contracts/Tip31Distributer.sol, 46
PUSHREF {
}
.loc ../contracts/Tip31Distributer.sol, 47
MYADDR
.loc ../contracts/Tip31Distributer.sol, 48
GETGLOB 9
SETGLOB 13
.loc ../contracts/Tip31Distributer.sol, 49
TRUE
SETGLOB 19
.loc ../contracts/Tip31Distributer.sol, 50
GETGLOB 20
ROLL 3
ADD
UFITS 128
SETGLOB 20
.loc ../contracts/Tip31Distributer.sol, 51
PUSHINT 0
PUSHCONT {
	DUP
	GETGLOB 15
	FIRST
	LESS
}
PUSHCONT {
	.loc ../contracts/Tip31Distributer.sol, 52
	DUP
	GETGLOB 15
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	.loc ../contracts/Tip31Distributer.sol, 53
	OVER
	GETGLOB 16
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	UFITS 128
	.loc ../contracts/Tip31Distributer.sol, 56
	PUSH S4
	FALSE
	PUSH S5
	PUSHINT 100000000
	BLKSWAP 2, 4
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 2820045005182170565370280386138670788247553
	STUR 143
	ROLLREV 6
	NEWC
	STSLICECONST x73e22143
	STU 128
	STSLICE
	STU 128
	ROLLREV 3
	NEWC
	STSLICE
	STI 1
	STREF
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/Tip31Distributer.sol, 51
	INC
	.loc ../contracts/Tip31Distributer.sol, 0
}
WHILE
BLKDROP 4
.loc ../contracts/Tip31Distributer.sol, 0

.macro refund
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Tip31Distributer.sol, 61
ENDS
.loc ../contracts/Tip31Distributer.sol, 0
CALLREF {
	CALL $refund_590e1ae3_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	refund_590e1ae3_internal
.type	refund_590e1ae3_internal, @function
CALL $refund_590e1ae3_internal_macro$

.macro refund_590e1ae3_internal_macro
.loc ../contracts/Tip31Distributer.sol, 63
GETGLOB 13
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2803819077499249229031122585109857988247553
STUR 143
GETGLOB 14
NEWC
STSLICECONST x20ebc76d
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Tip31Distributer.sol, 65
GETGLOB 14
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Tip31Distributer.sol, 0

.globl	setOwnership_a7016023_internal
.type	setOwnership_a7016023_internal, @function
CALL $setOwnership_a7016023_internal_macro$

.macro setOwnership_a7016023_internal_macro
.loc ../contracts/InternalOwner.sol, 24
GETGLOB 10
.loc ../contracts/InternalOwner.sol, 26
OVER
SETGLOB 10
.loc ../contracts/InternalOwner.sol, 28
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROTREV
NEWC
STSLICECONST x6115f072
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/InternalOwner.sol, 0

.macro transferOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/InternalOwner.sol, 34
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/InternalOwner.sol, 0
CALLREF {
	CALL $transferOwnership_f2fde38b_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro transferOwnership_f2fde38b_internal_macro
.loc ../contracts/InternalOwner.sol, 15
GETGLOB 9
GETGLOB 10
SDEQ
THROWIFNOT 1101
.loc ../contracts/InternalOwner.sol, 37
DUP
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SDEQ
THROWIF 1102
.loc ../contracts/InternalOwner.sol, 39
CALLREF {
	CALL $setOwnership_a7016023_internal_macro$
}
.loc ../contracts/InternalOwner.sol, 0

.macro renounceOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/InternalOwner.sol, 45
ENDS
.loc ../contracts/InternalOwner.sol, 0
CALLREF {
	CALL $renounceOwnership_715018a6_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro renounceOwnership_715018a6_internal_macro
.loc ../contracts/InternalOwner.sol, 15
GETGLOB 9
GETGLOB 10
SDEQ
THROWIFNOT 1101
.loc ../contracts/InternalOwner.sol, 46
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
.loc ../contracts/InternalOwner.sol, 48
CALLREF {
	CALL $setOwnership_a7016023_internal_macro$
}
.loc ../contracts/InternalOwner.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDREF
ENDS
CTOS
LDU 256
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDI 1
LDU 128
LDREF
LDU 256
ENDS
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 1
	PUSH S2
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 256
	}
	IF
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	BLKPUSH 2, 0
	PUSHINT 0
	NEWDICT
	PAIR
	DUP
	PUSHINT 2
	PUSH S8
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
	}
	IFNOT
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	DUP
	PUSHREF {
	}
	PUSHINT 0
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	FALSE
	SETGLOB 19
	PUSHINT 0
	SETGLOB 20
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 22
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
ROLLREV 12
NEWC
STU 256
STSLICE
ROLLREV 10
NEWC
STSLICE
ROLLREV 9
NEWC
STSLICE
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
ROLLREV 6
NEWC
STSLICE
ROLLREV 5
NEWC
STSLICE
STI 1
STU 128
STREF
STU 256
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro owner
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 10
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000df0bcfde
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _randomNonce
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000bb53331f
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _owner
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000008fd860ac
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro isCallback
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 19
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000cc61c7b9
	NEWC
	STSLICE
	STI 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 995308319
LEQ
IFJMPREF {
	DUP
	PUSHINT 235197086
	EQUAL
	IFJMPREF {
		CALL $transferOwnership$
	}
	DUP
	PUSHINT 265838764
	EQUAL
	IFJMPREF {
		CALL $_owner$
	}
	DUP
	PUSHINT 966922996
	EQUAL
	IFJMPREF {
		CALL $refund$
	}
	DUP
	PUSHINT 995308319
	EQUAL
	IFJMPREF {
		CALL $_randomNonce$
	}
}
DUP
PUSHINT 1729444094
LEQ
IFJMPREF {
	DUP
	PUSHINT 1136059906
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1281476537
	EQUAL
	IFJMPREF {
		CALL $isCallback$
	}
	DUP
	PUSHINT 1594609630
	EQUAL
	IFJMPREF {
		CALL $owner$
	}
	DUP
	PUSHINT 1729444094
	EQUAL
	IFJMPREF {
		CALL $renounceOwnership$
	}
}
DUP
PUSHINT 1893244873
EQUAL
IFJMPREF {
	CALL $onAcceptTokensTransfer$
}

