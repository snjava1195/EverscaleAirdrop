.version sol 0.59.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 256
ENDS
.loc EverAirdrop.sol, 50
OVER
FIRST
PUSH S3
FIRST
EQUAL
THROWIFNOT 101
.loc EverAirdrop.sol, 51
PUSH S2
FIRST
GTINT 0
PUSH S3
FIRST
LESSINT 100
AND
THROWIFNOT 102
.loc EverAirdrop.sol, 52
DUP
PUSHINT 604800
LEQ
OVER
GTINT 119
AND
THROWIFNOT 103
.loc EverAirdrop.sol, 53
ACCEPT
.loc EverAirdrop.sol, 55
ROT
SETGLOB 11
.loc EverAirdrop.sol, 56
SWAP
SETGLOB 12
.loc EverAirdrop.sol, 57
SWAP
SETGLOB 13
.loc EverAirdrop.sol, 58
NOW
ADD
SETGLOB 14
.loc EverAirdrop.sol, 61
PUSHINT 0
PUSHCONT {
	DUP
	GETGLOB 12
	FIRST
	LESS
}
PUSHCONT {
	.loc EverAirdrop.sol, 62
	DUP
	GETGLOB 12
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 128
	GETGLOB 16
	ADD
	SETGLOB 16
	.loc EverAirdrop.sol, 61
	INC
	.loc EverAirdrop.sol, 0
}
WHILE
DROP
.loc EverAirdrop.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro distribute
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc EverAirdrop.sol, 69
ENDS
.loc EverAirdrop.sol, 0
CALLREF {
	CALL $distribute_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	distribute_internal
.type	distribute_internal, @function
CALL $distribute_internal_macro$

.macro distribute_internal_macro
.loc EverAirdrop.sol, 22
GETPARAM 7
FIRST
GETGLOB 16
GETGLOB 17
ADD
GREATER
THROWIFNOT 105
.loc EverAirdrop.sol, 23
ACCEPT
.loc EverAirdrop.sol, 30
GETGLOB 15
FALSE
EQUAL
THROWIFNOT 108
.loc EverAirdrop.sol, 31
ACCEPT
.loc EverAirdrop.sol, 71
TRUE
SETGLOB 15
.loc EverAirdrop.sol, 73
PUSHINT 0
PUSHCONT {
	DUP
	GETGLOB 11
	FIRST
	LESS
}
PUSHCONT {
	.loc EverAirdrop.sol, 74
	DUP
	GETGLOB 12
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 128
	OVER
	GETGLOB 11
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	NEWC
	STSLICECONST x42_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 107
	STZEROES
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc EverAirdrop.sol, 73
	INC
	.loc EverAirdrop.sol, 0
}
WHILE
DROP
.loc EverAirdrop.sol, 0

.macro refund
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc EverAirdrop.sol, 89
ENDS
.loc EverAirdrop.sol, 0
CALLREF {
	CALL $refund_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	refund_internal
.type	refund_internal, @function
CALL $refund_internal_macro$

.macro refund_internal_macro
.loc EverAirdrop.sol, 38
GETGLOB 15
TRUE
EQUAL
NOW
GETGLOB 14
GREATER
OR
THROWIFNOT 107
.loc EverAirdrop.sol, 39
ACCEPT
.loc EverAirdrop.sol, 90
GETGLOB 13
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHINT 128
SENDRAWMSG
.loc EverAirdrop.sol, 0

.macro get_required_amount
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc EverAirdrop.sol, 93
ENDS
.loc EverAirdrop.sol, 0
CALLREF {
	CALL $get_required_amount_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 4120329477
	STUR 130
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro get_required_amount_internal_macro
.loc EverAirdrop.sol, 94
GETGLOB 16
GETGLOB 17
ADD
.loc EverAirdrop.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDMSGADDR
LDREF
ENDS
CTOS
LDU 256
LDI 1
LDU 256
LDU 256
LDU 128
ENDS
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	NEWDICT
	PAIR
	BLKPUSH 2, 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	BLKPUSH 4, 0
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	FALSE
	SETGLOB 15
	PUSHINT 0
	SETGLOB 16
	PUSHINT 1000000000
	SETGLOB 17
	PUSHINT 800000000
	SETGLOB 18
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
STSLICE
ROLLREV 5
NEWC
STU 256
STI 1
STU 256
STU 256
STU 128
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 42573990
EQUAL
IFJMPREF {
	CALL $distribute$
}
DUP
PUSHINT 966922996
EQUAL
IFJMPREF {
	CALL $refund$
}
DUP
PUSHINT 1608370372
EQUAL
IFJMPREF {
	CALL $constructor$
}
DUP
PUSHINT 1972845829
EQUAL
IFJMPREF {
	CALL $get_required_amount$
}

